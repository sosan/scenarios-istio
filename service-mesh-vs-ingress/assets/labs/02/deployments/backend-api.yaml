apiVersion: v1
kind: ServiceAccount
metadata:
  name: backend-api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api
  labels:
    app: backend-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-api
      version: v1
  template:
    metadata:
      labels:
        app: backend-api
        version: v1
    spec:
      serviceAccountName: backend-api
      containers:
      - name: backend-api
        image: nicholasjackson/fake-service:v0.24.2
        imagePullPolicy: Always
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
        resources:
          requests:
            memory: "60Mi"
            cpu: "250m"
            ephemeral-storage: "0Mi"
          limits:
            memory: "100Mi"
            cpu: "500m"
            ephemeral-storage: "0Mi"
        securityContext:
          allowPrivilegeEscalation: false
          # runAsUser: 10001
          # runAsGroup: 10001
          # runAsNonRoot: true
          # readOnlyRootFilesystem: true
        ports:
        - containerPort: 8080
        env:
        - name: "LISTEN_ADDR"
          value: "0.0.0.0:8080"
        - name: "UPSTREAM_URIS"
          value: "http://greetings:8080"
        - name: "NAME"
          value: "backend-api"
        - name: "MESSAGE"
          value: "----> API"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-api
spec:
  selector:
    app: backend-api
  ports:
  - name: http
    protocol: TCP
    port: 8080
    targetPort: 8080
---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: backend-network-policy
# spec:
#   podSelector:
#     matchLabels:
#       app: backend-api
#   policyTypes:
#   - Ingress
#   - Egress
#   egress:
#   - to:
#     - podSelector:
#         matchLabels:
#           security: trusted
#   ingress:
#   - from:
#     - podSelector:
#         matchLabels:
#           security: trusted